// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	// I am doing the same thing as Mux4Way16 except I am adding another bit to sel
	Mux4Way16(a = a, b = b, c = c, d = d, sel = sel[0..1], out = i1);
	Mux4Way16(a = e, b = f, c = g, d = h, sel = sel[0..1], out = i2);
	// I just ran the algorithm for Mux4Way16 except sel took two-bits, and then I just used Mux16 to determine what the output should be depending on the final bit of sel
	Mux16(a = i1, b = i2, sel = sel[2], out = out);
}
